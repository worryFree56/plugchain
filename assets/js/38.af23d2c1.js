(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{465:function(e,t,o){"use strict";o.r(t);var n=o(57),i=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"introduction"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),o("p",[e._v("The "),o("code",[e._v("plugchaind")]),e._v(" executable program is the entry point for running an Plug Chain Hub node. All the validator nodes and full nodes need to install the "),o("code",[e._v("plugchaind")]),e._v(" and launching the daemon to join the Plug Chain Hub network. You can also use "),o("code",[e._v("plugchaind")]),e._v(" to start your own test network locally.")]),e._v(" "),o("h2",{attrs:{id:"hardware-requeirment"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#hardware-requeirment"}},[e._v("#")]),e._v(" Hardware Requeirment")]),e._v(" "),o("p",[e._v("It's recommended that you run Plug Chain Hub nodes on Linux Server.")]),e._v(" "),o("h3",{attrs:{id:"minimum-requeirment"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#minimum-requeirment"}},[e._v("#")]),e._v(" Minimum Requeirment")]),e._v(" "),o("ul",[o("li",[e._v("2 CPU")]),e._v(" "),o("li",[e._v("Memory: 4GB")]),e._v(" "),o("li",[e._v("Disk: 500GB SSD")]),e._v(" "),o("li",[e._v("OS: Ubuntu 16.04 LTS +")]),e._v(" "),o("li",[e._v("Bandwidth: 5Mbps")]),e._v(" "),o("li",[e._v("Allow all incoming connections on TCP port 26656 and 26657")])]),e._v(" "),o("h2",{attrs:{id:"home-directory"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#home-directory"}},[e._v("#")]),e._v(" Home Directory")]),e._v(" "),o("p",[e._v("The home directory is the working directory of the plugchaind node. The home directory contains all the configuration information and all the data that the node runs.")]),e._v(" "),o("p",[e._v("In the "),o("code",[e._v("plugchaind")]),e._v(" command, you can specify the home directory of the node by using flag "),o("code",[e._v("--home")]),e._v(". If you run multiple nodes on the same machine, you need to specify different home directories for them. If the "),o("code",[e._v("--home")]),e._v(" flag is not specified in the plugchaind command, the default value "),o("code",[e._v("$HOME/.plugchain")]),e._v(" is used as the home directory.")]),e._v(" "),o("p",[e._v("The "),o("code",[e._v("plugchaind init")]),e._v(" command is responsible for initializing the specified "),o("code",[e._v("--home")]),e._v(" directory and creating the default configuration files. Except the "),o("code",[e._v("plugchaind init")]),e._v(" command, the home directory used by any other "),o("code",[e._v("plugchaind")]),e._v(" sub commands must be initialized, otherwise an error will be reported.")]),e._v(" "),o("p",[e._v("The data of the Plug Chain Hub node is stored in the "),o("code",[e._v("data")]),e._v(" directory of the home, including blockchain data, application layer data, and index data.")]),e._v(" "),o("p",[e._v("All configuration files are stored in the "),o("code",[e._v("<home-dir>/config")]),e._v(" directory:")]),e._v(" "),o("h3",{attrs:{id:"genesis-json"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#genesis-json"}},[e._v("#")]),e._v(" genesis.json")]),e._v(" "),o("p",[e._v("genesis.json defines the genesis block data, which specifies the system parameters such as chain_id, consensus parameters, initial account token allocation, creation of validators, and parameters for modules. See "),o("RouterLink",{attrs:{to:"/concepts/genesis-file.html"}},[e._v("genesis-file")]),e._v(" for details.")],1),e._v(" "),o("h3",{attrs:{id:"node-key-json"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#node-key-json"}},[e._v("#")]),e._v(" node_key.json")]),e._v(" "),o("p",[e._v("node_key.json is used to store the node's key. The node-id queried by "),o("code",[e._v("plugchaind tendermint show-node-id")]),e._v(" is derived by the key, which is used to indicate the unique identity of the node. It is used in p2p connection.")]),e._v(" "),o("h3",{attrs:{id:"priv-validator-json"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#priv-validator-json"}},[e._v("#")]),e._v(" priv_validator.json")]),e._v(" "),o("p",[e._v("pri_validator.json is the "),o("RouterLink",{attrs:{to:"/concepts/validator-faq.html#tendermint-key"}},[e._v("Tendermint Key")]),e._v(" file that the validator will use to sign Pre-vote/Pre-commit in each round of consensus voting. As the consensus progresses, the tendermint consensus engine will continuously update "),o("code",[e._v("last_height")]),e._v("/"),o("code",[e._v("last_round")]),e._v("/"),o("code",[e._v("last_step")]),e._v(" values.")],1),e._v(" "),o("h3",{attrs:{id:"config-toml"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#config-toml"}},[e._v("#")]),e._v(" config.toml")]),e._v(" "),o("p",[e._v("config.toml is the non-consensus configuration of the node. Different nodes can configure themselves according to their own situation. Common modifications are "),o("code",[e._v("persistent_peers")]),e._v(", "),o("code",[e._v("moniker")]),e._v(", "),o("code",[e._v("laddr")]),e._v(".")]),e._v(" "),o("h3",{attrs:{id:"app-toml"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#app-toml"}},[e._v("#")]),e._v(" app.toml")]),e._v(" "),o("p",[e._v("app.toml provides base configuration, telemetry configuration, API configuration, gRPC configuration and state sync configuration for Plug Chain Hub.")])])}),[],!1,null,null,null);t.default=i.exports}}]);